#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'
module ToothBrush
  class Parser < Racc::Parser


attr_accessor :result

  def lex(code)
    @lexer = Lexer.new(code)
    @lexer.tokenize #Kickstart lexer
  end

  def parse(code)
    lex(code)
    @result
    do_parse
  end

  def next_token
    @lexer.next_token 
  end
##### State transition tables begin ###

racc_action_table = [
     7,    10,     9,    12,    11,     6,     5,     8,    13,    15,
     2,    16 ]

racc_action_check = [
     0,     2,     2,     8,     7,     0,     0,     1,    11,    13,
     0,    15 ]

racc_action_pointer = [
    -2,     7,    -6,   nil,   nil,   nil,   nil,    -6,     3,   nil,
   nil,    -1,   nil,    -1,   nil,     2,   nil ]

racc_action_default = [
    -1,   -11,    -2,    -5,    -6,    -7,    -8,   -11,   -11,    -3,
    -4,   -11,    17,   -11,   -10,   -11,    -9 ]

racc_goto_table = [
     1,     3,     4,    14 ]

racc_goto_check = [
     1,     2,     3,     4 ]

racc_goto_pointer = [
   nil,     0,     1,     2,    -8 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 15, :_reduce_none,
  1, 15, :_reduce_2,
  2, 15, :_reduce_3,
  2, 15, :_reduce_4,
  1, 15, :_reduce_5,
  1, 15, :_reduce_none,
  1, 17, :_reduce_none,
  1, 17, :_reduce_8,
  3, 18, :_reduce_none,
  3, 16, :_reduce_10 ]

racc_reduce_n = 11

racc_shift_n = 17

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :PARAMETERS => 3,
  :STRING => 4,
  :WHITESPACE => 5,
  :INDENT => 6,
  :TERMINATOR => 7,
  :NEWLINE => 8,
  :NUMBER => 9,
  :OPERATOR => 10,
  :FUNCTION => 11,
  :ALIAS => 12,
  :false => 13 }

racc_nt_base = 14

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "PARAMETERS",
  "STRING",
  "WHITESPACE",
  "INDENT",
  "TERMINATOR",
  "NEWLINE",
  "NUMBER",
  "OPERATOR",
  "FUNCTION",
  "ALIAS",
  "false",
  "$start",
  "Root",
  "Declaration",
  "Terminator",
  "Addition" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
 p "Found Just Alias : #{val[0]}"
    result
end

def _reduce_3(val, _values, result)
 p "Found Alias Newline : " + val[1]
    result
end

def _reduce_4(val, _values, result)
p "Found Alias with Terminator : #{val[0]}  #{val[1]}" 
    result
end

def _reduce_5(val, _values, result)
 p "Found only declaration : #{val[0]}" 
    result
end

# reduce 6 omitted

# reduce 7 omitted

def _reduce_8(val, _values, result)
 parse_error! "Unexpected Token Found '#{val[0]}'" 
    result
end

# reduce 9 omitted

def _reduce_10(val, _values, result)
 p "Found Identifier Operator Expr : #{val[0]} #{val[1]} #{val[2]}" 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module ToothBrush
